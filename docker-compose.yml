version: "3.7"

services:
  # PHP Server
  # ==========
  php:
    build:
      context: . #current directory
      target: php-server # variable defined in Dockerfile's FROM directive
      args:
        - APP_ENV=${APP_ENV}

    environment: 
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app

    working_dir: /var/www
    volumes:
      - ./:/var/www # map current directory into /var/www
    ports: 
      - 8000:8000

    depends_on: # let db and redis be created first, then php_server, after.
      - database
      - redis
  
  
  # database Server
  # ===============
  database:
    image: mysql:8.0
    ports:
      - 3306:3306

    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    
    volumes:
      - db-data:/var/lib/mysql

  
  # Redis Server
  # ============
  redis:
    image: redis
    # Run this command to require password for redis every time redis sever is started, .env file is used
    command: |
      redis-server --appendonly yes --requirepass  "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"

  # Queue Server
  # ============
  queue:
    build:
      context: .
      target: php-server
      args:
        - APP_ENV=${APP_ENV}
    
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue

    working_dir: /var/www
    volumes:
      - ./:/var/www

  # NodeJS Server
  # =============
  node:
    build:
      context: .
      target: node-server
      
    volumes:
      - ./:/usr/src
      - ./node_modules:/usr/src/node_modules
    tty: true

volumes:
  db-data: ~